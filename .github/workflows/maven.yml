name: Java CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres
          # required
          POSTGRES_PASSWORD: password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
        env: # Or as an environment variable
          username: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          password: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      - name: Test with Maven
        run: mvn -B test --file pom.xml
        env: # Or as an environment variable
          username: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          password: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
